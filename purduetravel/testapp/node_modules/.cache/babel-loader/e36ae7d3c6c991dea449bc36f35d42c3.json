{"ast":null,"code":"import _classCallCheck from \"/Users/justin/Desktop/GitHub/CS252/purduetravel/testapp/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/justin/Desktop/GitHub/CS252/purduetravel/testapp/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/justin/Desktop/GitHub/CS252/purduetravel/testapp/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/justin/Desktop/GitHub/CS252/purduetravel/testapp/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/justin/Desktop/GitHub/CS252/purduetravel/testapp/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/justin/Desktop/GitHub/CS252/purduetravel/testapp/src/components/Post/Create.js\";\nimport React, { Component } from 'react';\nimport { firebase } from '../../shared/firebase';\nimport { connect } from 'react-redux';\nimport { compose } from 'recompose';\nimport withAuthorization from '../withAuthorization';\nimport { Link } from 'react-router-dom';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Input from '@material-ui/core/Input';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport './style.css';\nvar u = \" \";\nvar userEmail;\n\nvar Create =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Create, _Component);\n\n  function Create() {\n    var _this;\n\n    _classCallCheck(this, Create);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Create).call(this));\n\n    _this.onChange = function (e) {\n      var state = _this.state;\n      state[e.target.name] = e.target.value;\n\n      _this.setState(state);\n    };\n\n    _this.onSubmit = function (e) {\n      e.preventDefault();\n      var event = new Date();\n      var date = event.toLocaleString('en-US');\n      var _this$state = _this.state,\n          title = _this$state.title,\n          description = _this$state.description,\n          mtime = _this$state.mtime,\n          image = _this$state.image,\n          username = _this$state.username,\n          key = _this$state.key;\n\n      _this.ref.add({\n        title: title,\n        description: description,\n        mtime: date,\n        image: u,\n        username: userEmail,\n        key: userEmail\n      }).then(function (docRef) {\n        _this.setState({\n          title: '',\n          description: '',\n          image: '',\n          username: '',\n          key: ''\n        });\n\n        u = \" \";\n\n        _this.props.history.push(\"/home\");\n      }).catch(function (error) {\n        console.error(\"Error adding document: \", error);\n      });\n    };\n\n    _this.ref = firebase.firestore().collection('forum');\n    _this.state = {\n      title: '',\n      description: '',\n      mtime: '',\n      image: '',\n      username: '',\n      key: ''\n    };\n    return _this;\n  }\n\n  _createClass(Create, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var user = firebase.auth().currentUser;\n      var name, photoUrl, uid, emailVerified;\n\n      if (user != null) {\n        name = user.displayName;\n        userEmail = user.email;\n        photoUrl = user.photoURL;\n        emailVerified = user.emailVerified;\n        uid = user.uid;\n      }\n\n      console.log(name, userEmail, photoUrl, uid, emailVerified);\n    }\n  }, {\n    key: \"uploadImage\",\n    value: function uploadImage() {\n      var r = new XMLHttpRequest();\n      var d = new FormData();\n      var e = document.getElementsByClassName('input-image')[0].files[0];\n      d.append('image', e);\n      r.open('POST', 'https://api.imgur.com/3/image/');\n      r.setRequestHeader('Authorization', \"Client-ID 870f5affa924d77\");\n\n      r.onreadystatechange = function () {\n        if (r.status === 200 && r.readyState === 4) {\n          var res = JSON.parse(r.responseText);\n          u = \"https://i.imgur.com/\".concat(res.data.id, \".png\");\n        }\n      };\n\n      r.send(d);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var isInvalid = this.state.title === '';\n      var _this$state2 = this.state,\n          title = _this$state2.title,\n          description = _this$state2.description,\n          location = _this$state2.location,\n          mtime = _this$state2.mtime,\n          image = _this$state2.image,\n          video = _this$state2.video;\n      return React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"panel panel-create\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"panel-heading\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        className: \"panel-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, \"Add Post\")), React.createElement(\"div\", {\n        className: \"panel-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/home\",\n        className: \"btn btn-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, \"Cancel\")), React.createElement(FormGroup, {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"text\",\n        name: \"title\",\n        value: title,\n        onChange: this.onChange,\n        placeholder: \"Title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }), React.createElement(TextField, {\n        id: \"filled-multiline-static\",\n        label: \"Description\",\n        multiline: true,\n        rows: \"4\",\n        name: \"description\",\n        margin: \"normal\",\n        onChange: this.onChange,\n        value: description,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, React.createElement(FormLabel, {\n        component: \"legend\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, \"Image\"), React.createElement(\"input\", {\n        type: \"file\",\n        className: \"input-image\",\n        onChange: this.uploadImage.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      })), React.createElement(Button, {\n        color: \"primary\",\n        variant: \"outlined\",\n        disabled: isInvalid,\n        onClick: this.onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, \"Post\")))));\n    }\n  }]);\n\n  return Create;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    authUser: state.sessionState.authUser\n  };\n};\n\nvar authCondition = function authCondition(authUser) {\n  return !!authUser;\n};\n\nexport default compose(withAuthorization(authCondition), connect(mapStateToProps))(Create);","map":{"version":3,"sources":["/Users/justin/Desktop/GitHub/CS252/purduetravel/testapp/src/components/Post/Create.js"],"names":["React","Component","firebase","connect","compose","withAuthorization","Link","FormGroup","TextField","Button","Input","FormLabel","u","userEmail","Create","onChange","e","state","target","name","value","setState","onSubmit","preventDefault","event","Date","date","toLocaleString","title","description","mtime","image","username","key","ref","add","then","docRef","props","history","push","catch","error","console","firestore","collection","user","auth","currentUser","photoUrl","uid","emailVerified","displayName","email","photoURL","log","r","XMLHttpRequest","d","FormData","document","getElementsByClassName","files","append","open","setRequestHeader","onreadystatechange","status","readyState","res","JSON","parse","responseText","data","id","send","isInvalid","location","video","uploadImage","bind","mapStateToProps","authUser","sessionState","authCondition"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {firebase} from '../../shared/firebase';\nimport { connect } from 'react-redux';\nimport { compose } from 'recompose';\nimport withAuthorization from '../withAuthorization';\nimport { Link } from 'react-router-dom';\n\nimport FormGroup from '@material-ui/core/FormGroup';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Input from '@material-ui/core/Input';\nimport FormLabel from '@material-ui/core/FormLabel';\n\nimport './style.css';\n\n\nvar u = \" \";\nlet userEmail;\n\nclass Create extends Component {\n\n  constructor() {\n    super();\n    this.ref = firebase.firestore().collection('forum');\n    this.state = {\n      title: '',\n      description: '',\n      mtime: '',\n      image: '',\n      username: '',\n      key: '',\n    };\n  }\n\n  onChange = (e) => {\n    const state = this.state\n    state[e.target.name] = e.target.value;\n    this.setState(state);\n\n    \n  }\n\n  componentDidMount() {\n    var user = firebase.auth().currentUser;\n    var name, photoUrl, uid, emailVerified;\n\n    if (user != null) {\n      name = user.displayName;\n      userEmail = user.email;\n      photoUrl = user.photoURL;\n      emailVerified = user.emailVerified;\n      uid = user.uid;\n    }\n    console.log(name, userEmail, photoUrl, uid, emailVerified)\n  }\n\n  onSubmit = (e) => {\n    e.preventDefault();\n\n    var event = new Date();\n    var date = event.toLocaleString('en-US')\n\n    const {\n      title,\n      description,\n      mtime,\n      image,\n      username,\n      key,\n    } = this.state;\n    \n    this.ref.add({\n      title,\n      description,\n      mtime: date,\n      image: u,\n      username: userEmail,\n      key: userEmail,\n    }).then((docRef) => {\n      this.setState({\n        title: '',\n        description: '',\n        image: '',\n        username: '',\n        key: '',\n      });\n      u = \" \"\n      this.props.history.push(\"/home\")\n    })\n    .catch((error) => {\n      console.error(\"Error adding document: \", error);\n    });\n  }\n\n  uploadImage() {\n    const r = new XMLHttpRequest()\n    const d = new FormData()\n    const e = document.getElementsByClassName('input-image')[0].files[0]\n\n    d.append('image', e)\n\n    r.open('POST', 'https://api.imgur.com/3/image/')\n    r.setRequestHeader('Authorization', `Client-ID 870f5affa924d77`)\n    r.onreadystatechange = function () {\n      if (r.status === 200 && r.readyState === 4) {\n        let res = JSON.parse(r.responseText)\n        u = `https://i.imgur.com/${res.data.id}.png`\n      }\n    }\n\n    r.send(d)\n  }\n\n  render() {\n    const isInvalid =\n      this.state.title === '';\n\n    const {\n      title,\n      description,\n      location,\n      mtime,\n      image,\n      video,\n    } = this.state;\n    return (\n      <div className=\"container\">\n        <div className=\"panel panel-create\">\n          <div className=\"panel-heading\">\n            <h3 className=\"panel-title\">\n              Add Post\n            </h3>\n          </div>\n          <div className=\"panel-body\">\n            <h4><Link to=\"/home\" className=\"btn btn-primary\">Cancel</Link></h4>\n            <FormGroup className=\"form-group\">\n              <Input type=\"text\" name=\"title\" value={title} onChange={this.onChange} placeholder=\"Title\" />\n              <TextField\n                  id=\"filled-multiline-static\"\n                  label=\"Description\"\n                  multiline\n                  rows=\"4\"\n                  name=\"description\"\n                  margin=\"normal\"\n                  onChange={this.onChange}\n                  value = {description}\n                />\n              <div>\n                <FormLabel component=\"legend\">Image</FormLabel>\n                <input type=\"file\" className=\"input-image\" onChange={this.uploadImage.bind(this)}/><br/>\n              </div>\n            \n              <Button color=\"primary\" variant=\"outlined\" disabled={isInvalid} onClick={this.onSubmit}>Post</Button>\n\n            </FormGroup>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = (state) => ({\n  authUser: state.sessionState.authUser,\n});\n\nconst authCondition = (authUser) => !!authUser;\n\nexport default compose(\n  withAuthorization(authCondition),\n  connect(mapStateToProps)\n)(Create);"]},"metadata":{},"sourceType":"module"}