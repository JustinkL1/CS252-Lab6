{"ast":null,"code":"import _classCallCheck from \"/Users/justin/Desktop/GitHub/CS252/purduetravel/testapp/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/justin/Desktop/GitHub/CS252/purduetravel/testapp/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/justin/Desktop/GitHub/CS252/purduetravel/testapp/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/justin/Desktop/GitHub/CS252/purduetravel/testapp/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/justin/Desktop/GitHub/CS252/purduetravel/testapp/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/justin/Desktop/GitHub/CS252/purduetravel/testapp/src/pages/Display.js\";\nimport ThreadDisplay from '../components/ThreadDisplay.js';\nimport { connect } from 'react-redux';\nimport { compose } from 'recompose';\nimport React, { Component } from 'react';\nimport withAuthorization from '../components/withAuthorization';\nimport { firebase } from '../shared/firebase';\nimport '../components/Post/style.css';\n\nvar ForumPage =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ForumPage, _Component);\n\n  function ForumPage(props) {\n    var _this;\n\n    _classCallCheck(this, ForumPage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ForumPage).call(this, props));\n    _this.database = firebase.database();\n    return _this;\n  }\n\n  _createClass(ForumPage, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }, React.createElement(ThreadDisplay, {\n        database: this.database,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return ForumPage;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    authUser: state.sessionState.authUser\n  };\n};\n\nvar authCondition = function authCondition(authUser) {\n  return !!authUser;\n};\n\nexport default compose(withAuthorization(authCondition), connect(mapStateToProps))(ForumPage);","map":{"version":3,"sources":["/Users/justin/Desktop/GitHub/CS252/purduetravel/testapp/src/pages/Display.js"],"names":["ThreadDisplay","connect","compose","React","Component","withAuthorization","firebase","ForumPage","props","database","mapStateToProps","state","authUser","sessionState","authCondition"],"mappings":";;;;;;AAAA,OAAOA,aAAP,MAA0B,gCAA1B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,OAAT,QAAwB,WAAxB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,iBAAP,MAA8B,iCAA9B;AACA,SAAQC,QAAR,QAAuB,oBAAvB;AACA,OAAO,8BAAP;;IACMC,S;;;;;AAEJ,qBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,mFAAMA,KAAN;AACA,UAAKC,QAAL,GAAgBH,QAAQ,CAACG,QAAT,EAAhB;AAFiB;AAIlB;;;;6BAEQ;AACP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,aAAD;AAAe,QAAA,QAAQ,EAAE,KAAKA,QAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF;AAKD;;;;EAdqBL,S;;AAiBxB,IAAMM,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD;AAAA,SAAY;AAClCC,IAAAA,QAAQ,EAAED,KAAK,CAACE,YAAN,CAAmBD;AADK,GAAZ;AAAA,CAAxB;;AAIA,IAAME,aAAa,GAAG,SAAhBA,aAAgB,CAACF,QAAD;AAAA,SAAc,CAAC,CAACA,QAAhB;AAAA,CAAtB;;AAEA,eAAeV,OAAO,CACpBG,iBAAiB,CAACS,aAAD,CADG,EAEpBb,OAAO,CAACS,eAAD,CAFa,CAAP,CAGbH,SAHa,CAAf","sourcesContent":["import ThreadDisplay from '../components/ThreadDisplay.js';\nimport { connect } from 'react-redux';\nimport { compose } from 'recompose';\nimport React, { Component } from 'react';\nimport withAuthorization from '../components/withAuthorization';\nimport {firebase} from '../shared/firebase'\nimport '../components/Post/style.css';\nclass ForumPage extends Component {\n\n  constructor(props) {\n    super(props);\n    this.database = firebase.database();\n    \n  }\n\n  render() {\n    return (\n      <div>\n        <ThreadDisplay database={this.database} />\n      </div>   \n      )\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  authUser: state.sessionState.authUser,\n});\n\nconst authCondition = (authUser) => !!authUser;\n\nexport default compose(\n  withAuthorization(authCondition),\n  connect(mapStateToProps)\n)(ForumPage);"]},"metadata":{},"sourceType":"module"}