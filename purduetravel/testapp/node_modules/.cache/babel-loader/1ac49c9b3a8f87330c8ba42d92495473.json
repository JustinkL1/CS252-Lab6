{"ast":null,"code":"import _classCallCheck from \"/Users/justin/Desktop/GitHub/CS252/purduetravel/testapp/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/justin/Desktop/GitHub/CS252/purduetravel/testapp/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/justin/Desktop/GitHub/CS252/purduetravel/testapp/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/justin/Desktop/GitHub/CS252/purduetravel/testapp/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/justin/Desktop/GitHub/CS252/purduetravel/testapp/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/justin/Desktop/GitHub/CS252/purduetravel/testapp/src/components/withAuthorization.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { compose } from 'recompose';\nimport { withRouter } from 'react-router-dom';\nimport { firebase } from '../shared';\nimport * as routes from '../constants/routes';\n\nvar withAuthorization = function withAuthorization(condition) {\n  return function (Component) {\n    var WithAuthorization =\n    /*#__PURE__*/\n    function (_React$Component) {\n      _inherits(WithAuthorization, _React$Component);\n\n      function WithAuthorization() {\n        _classCallCheck(this, WithAuthorization);\n\n        return _possibleConstructorReturn(this, _getPrototypeOf(WithAuthorization).apply(this, arguments));\n      }\n\n      _createClass(WithAuthorization, [{\n        key: \"componentDidMount\",\n        value: function componentDidMount() {\n          var _this = this;\n\n          firebase.auth.onAuthStateChanged(function (authUser) {\n            if (!condition(authUser)) {\n              _this.props.history.push(routes.LANDING);\n            }\n          });\n        }\n      }, {\n        key: \"render\",\n        value: function render() {\n          return this.props.authUser ? React.createElement(Component, Object.assign({}, this.props, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 20\n            },\n            __self: this\n          })) : null;\n        }\n      }]);\n\n      return WithAuthorization;\n    }(React.Component);\n\n    var mapStateToProps = function mapStateToProps(state) {\n      return {\n        authUser: state.sessionState.authUser\n      };\n    };\n\n    return compose(withRouter, connect(mapStateToProps))(WithAuthorization);\n  };\n};\n\nexport default withAuthorization;","map":{"version":3,"sources":["/Users/justin/Desktop/GitHub/CS252/purduetravel/testapp/src/components/withAuthorization.js"],"names":["React","connect","compose","withRouter","firebase","routes","withAuthorization","condition","Component","WithAuthorization","auth","onAuthStateChanged","authUser","props","history","push","LANDING","mapStateToProps","state","sessionState"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,OAAT,QAAwB,WAAxB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AAEA,SAASC,QAAT,QAAyB,WAAzB;AACA,OAAO,KAAKC,MAAZ,MAAwB,qBAAxB;;AAEA,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,SAAD;AAAA,SAAe,UAACC,SAAD,EAAe;AAAA,QAChDC,iBADgD;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,4CAEhC;AAAA;;AAClBL,UAAAA,QAAQ,CAACM,IAAT,CAAcC,kBAAd,CAAiC,UAAAC,QAAQ,EAAI;AAC3C,gBAAI,CAACL,SAAS,CAACK,QAAD,CAAd,EAA0B;AACxB,cAAA,KAAI,CAACC,KAAL,CAAWC,OAAX,CAAmBC,IAAnB,CAAwBV,MAAM,CAACW,OAA/B;AACD;AACF,WAJD;AAKD;AARmD;AAAA;AAAA,iCAU3C;AACP,iBAAO,KAAKH,KAAL,CAAWD,QAAX,GAAsB,oBAAC,SAAD,oBAAe,KAAKC,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAtB,GAAsD,IAA7D;AACD;AAZmD;;AAAA;AAAA,MACtBb,KAAK,CAACQ,SADgB;;AAetD,QAAMS,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD;AAAA,aAAY;AAClCN,QAAAA,QAAQ,EAAEM,KAAK,CAACC,YAAN,CAAmBP;AADK,OAAZ;AAAA,KAAxB;;AAIA,WAAOV,OAAO,CACZC,UADY,EAEZF,OAAO,CAACgB,eAAD,CAFK,CAAP,CAGLR,iBAHK,CAAP;AAID,GAvByB;AAAA,CAA1B;;AAyBA,eAAeH,iBAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { compose } from 'recompose';\nimport { withRouter } from 'react-router-dom';\n\nimport { firebase } from '../shared';\nimport * as routes from '../constants/routes';\n\nconst withAuthorization = (condition) => (Component) => {\n  class WithAuthorization extends React.Component {\n    componentDidMount() {\n      firebase.auth.onAuthStateChanged(authUser => {\n        if (!condition(authUser)) {\n          this.props.history.push(routes.LANDING);\n        }\n      });\n    }\n\n    render() {\n      return this.props.authUser ? <Component {...this.props} /> : null;\n    }\n  }\n\n  const mapStateToProps = (state) => ({\n    authUser: state.sessionState.authUser,\n  });\n\n  return compose(\n    withRouter,\n    connect(mapStateToProps),\n  )(WithAuthorization);\n}\n\nexport default withAuthorization;"]},"metadata":{},"sourceType":"module"}